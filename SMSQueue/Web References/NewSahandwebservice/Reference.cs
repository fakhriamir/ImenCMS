//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18051.
// 
#pragma warning disable 1591

namespace SMSQueue.NewSahandwebservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NewSmsWebserviceSoap", Namespace="http://tempuri.org/")]
    public partial class NewSmsWebservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendFromUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArraySendQeueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArraySendQeueWithIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendQeueOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueueMessageStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTarrifOperatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecieveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnreadMessgeseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnreadMessgeseWithUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckVersionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NewSmsWebservice() {
            this.Url = global::SMSQueue.Properties.Settings.Default.SMSQueue_NewSahandwebservice_NewSmsWebservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendFromUrlCompletedEventHandler SendFromUrlCompleted;
        
        /// <remarks/>
        public event ArraySendQeueCompletedEventHandler ArraySendQeueCompleted;
        
        /// <remarks/>
        public event ArraySendQeueWithIdCompletedEventHandler ArraySendQeueWithIdCompleted;
        
        /// <remarks/>
        public event SendQeueCompletedEventHandler SendQeueCompleted;
        
        /// <remarks/>
        public event SendCompletedEventHandler SendCompleted;
        
        /// <remarks/>
        public event GetUserCreditCompletedEventHandler GetUserCreditCompleted;
        
        /// <remarks/>
        public event GetMessageStatusCompletedEventHandler GetMessageStatusCompleted;
        
        /// <remarks/>
        public event GetQueueMessageStatusCompletedEventHandler GetQueueMessageStatusCompleted;
        
        /// <remarks/>
        public event CheckCreditCompletedEventHandler CheckCreditCompleted;
        
        /// <remarks/>
        public event GetTarrifOperatorCompletedEventHandler GetTarrifOperatorCompleted;
        
        /// <remarks/>
        public event RecieveSMSCompletedEventHandler RecieveSMSCompleted;
        
        /// <remarks/>
        public event GetUnreadMessgeseCompletedEventHandler GetUnreadMessgeseCompleted;
        
        /// <remarks/>
        public event GetUnreadMessgeseWithUsernameCompletedEventHandler GetUnreadMessgeseWithUsernameCompleted;
        
        /// <remarks/>
        public event TestCompletedEventHandler TestCompleted;
        
        /// <remarks/>
        public event CheckVersionCompletedEventHandler CheckVersionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFromUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SendFromUrl(string username, string password, string message, string fromNumber, string toNumber) {
            object[] results = this.Invoke("SendFromUrl", new object[] {
                        username,
                        password,
                        message,
                        fromNumber,
                        toNumber});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SendFromUrlAsync(string username, string password, string message, string fromNumber, string toNumber) {
            this.SendFromUrlAsync(username, password, message, fromNumber, toNumber, null);
        }
        
        /// <remarks/>
        public void SendFromUrlAsync(string username, string password, string message, string fromNumber, string toNumber, object userState) {
            if ((this.SendFromUrlOperationCompleted == null)) {
                this.SendFromUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFromUrlOperationCompleted);
            }
            this.InvokeAsync("SendFromUrl", new object[] {
                        username,
                        password,
                        message,
                        fromNumber,
                        toNumber}, this.SendFromUrlOperationCompleted, userState);
        }
        
        private void OnSendFromUrlOperationCompleted(object arg) {
            if ((this.SendFromUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFromUrlCompleted(this, new SendFromUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArraySendQeue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ArraySendQeue(string[] Messages, string[] Mobiles, string[] senderNumbers, string Username, string Password) {
            object[] results = this.Invoke("ArraySendQeue", new object[] {
                        Messages,
                        Mobiles,
                        senderNumbers,
                        Username,
                        Password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ArraySendQeueAsync(string[] Messages, string[] Mobiles, string[] senderNumbers, string Username, string Password) {
            this.ArraySendQeueAsync(Messages, Mobiles, senderNumbers, Username, Password, null);
        }
        
        /// <remarks/>
        public void ArraySendQeueAsync(string[] Messages, string[] Mobiles, string[] senderNumbers, string Username, string Password, object userState) {
            if ((this.ArraySendQeueOperationCompleted == null)) {
                this.ArraySendQeueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArraySendQeueOperationCompleted);
            }
            this.InvokeAsync("ArraySendQeue", new object[] {
                        Messages,
                        Mobiles,
                        senderNumbers,
                        Username,
                        Password}, this.ArraySendQeueOperationCompleted, userState);
        }
        
        private void OnArraySendQeueOperationCompleted(object arg) {
            if ((this.ArraySendQeueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArraySendQeueCompleted(this, new ArraySendQeueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ArraySendQeueWithId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ArraySendQeueWithId(System.Guid[] Ids, string[] Messages, string[] Mobiles, string[] senderNumbers, string Username, string Password) {
            object[] results = this.Invoke("ArraySendQeueWithId", new object[] {
                        Ids,
                        Messages,
                        Mobiles,
                        senderNumbers,
                        Username,
                        Password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ArraySendQeueWithIdAsync(System.Guid[] Ids, string[] Messages, string[] Mobiles, string[] senderNumbers, string Username, string Password) {
            this.ArraySendQeueWithIdAsync(Ids, Messages, Mobiles, senderNumbers, Username, Password, null);
        }
        
        /// <remarks/>
        public void ArraySendQeueWithIdAsync(System.Guid[] Ids, string[] Messages, string[] Mobiles, string[] senderNumbers, string Username, string Password, object userState) {
            if ((this.ArraySendQeueWithIdOperationCompleted == null)) {
                this.ArraySendQeueWithIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArraySendQeueWithIdOperationCompleted);
            }
            this.InvokeAsync("ArraySendQeueWithId", new object[] {
                        Ids,
                        Messages,
                        Mobiles,
                        senderNumbers,
                        Username,
                        Password}, this.ArraySendQeueWithIdOperationCompleted, userState);
        }
        
        private void OnArraySendQeueWithIdOperationCompleted(object arg) {
            if ((this.ArraySendQeueWithIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArraySendQeueWithIdCompleted(this, new ArraySendQeueWithIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendQeue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SendQeue(string username, string password, string message, string fromNumber, string[] toNumbers) {
            object[] results = this.Invoke("SendQeue", new object[] {
                        username,
                        password,
                        message,
                        fromNumber,
                        toNumbers});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SendQeueAsync(string username, string password, string message, string fromNumber, string[] toNumbers) {
            this.SendQeueAsync(username, password, message, fromNumber, toNumbers, null);
        }
        
        /// <remarks/>
        public void SendQeueAsync(string username, string password, string message, string fromNumber, string[] toNumbers, object userState) {
            if ((this.SendQeueOperationCompleted == null)) {
                this.SendQeueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendQeueOperationCompleted);
            }
            this.InvokeAsync("SendQeue", new object[] {
                        username,
                        password,
                        message,
                        fromNumber,
                        toNumbers}, this.SendQeueOperationCompleted, userState);
        }
        
        private void OnSendQeueOperationCompleted(object arg) {
            if ((this.SendQeueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendQeueCompleted(this, new SendQeueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] Send(string username, string password, string message, string fromNumber, string[] toNumbers) {
            object[] results = this.Invoke("Send", new object[] {
                        username,
                        password,
                        message,
                        fromNumber,
                        toNumbers});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void SendAsync(string username, string password, string message, string fromNumber, string[] toNumbers) {
            this.SendAsync(username, password, message, fromNumber, toNumbers, null);
        }
        
        /// <remarks/>
        public void SendAsync(string username, string password, string message, string fromNumber, string[] toNumbers, object userState) {
            if ((this.SendOperationCompleted == null)) {
                this.SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOperationCompleted);
            }
            this.InvokeAsync("Send", new object[] {
                        username,
                        password,
                        message,
                        fromNumber,
                        toNumbers}, this.SendOperationCompleted, userState);
        }
        
        private void OnSendOperationCompleted(object arg) {
            if ((this.SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCompleted(this, new SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserCredit(string Username, string password) {
            object[] results = this.Invoke("GetUserCredit", new object[] {
                        Username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCreditAsync(string Username, string password) {
            this.GetUserCreditAsync(Username, password, null);
        }
        
        /// <remarks/>
        public void GetUserCreditAsync(string Username, string password, object userState) {
            if ((this.GetUserCreditOperationCompleted == null)) {
                this.GetUserCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCreditOperationCompleted);
            }
            this.InvokeAsync("GetUserCredit", new object[] {
                        Username,
                        password}, this.GetUserCreditOperationCompleted, userState);
        }
        
        private void OnGetUserCreditOperationCompleted(object arg) {
            if ((this.GetUserCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCreditCompleted(this, new GetUserCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetMessageStatus(string Username, string password, long[] MessageIds) {
            object[] results = this.Invoke("GetMessageStatus", new object[] {
                        Username,
                        password,
                        MessageIds});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(string Username, string password, long[] MessageIds) {
            this.GetMessageStatusAsync(Username, password, MessageIds, null);
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(string Username, string password, long[] MessageIds, object userState) {
            if ((this.GetMessageStatusOperationCompleted == null)) {
                this.GetMessageStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageStatusOperationCompleted);
            }
            this.InvokeAsync("GetMessageStatus", new object[] {
                        Username,
                        password,
                        MessageIds}, this.GetMessageStatusOperationCompleted, userState);
        }
        
        private void OnGetMessageStatusOperationCompleted(object arg) {
            if ((this.GetMessageStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageStatusCompleted(this, new GetMessageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetQueueMessageStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetQueueMessageStatus(string Username, string password, string[] MessageIds) {
            object[] results = this.Invoke("GetQueueMessageStatus", new object[] {
                        Username,
                        password,
                        MessageIds});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQueueMessageStatusAsync(string Username, string password, string[] MessageIds) {
            this.GetQueueMessageStatusAsync(Username, password, MessageIds, null);
        }
        
        /// <remarks/>
        public void GetQueueMessageStatusAsync(string Username, string password, string[] MessageIds, object userState) {
            if ((this.GetQueueMessageStatusOperationCompleted == null)) {
                this.GetQueueMessageStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueueMessageStatusOperationCompleted);
            }
            this.InvokeAsync("GetQueueMessageStatus", new object[] {
                        Username,
                        password,
                        MessageIds}, this.GetQueueMessageStatusOperationCompleted, userState);
        }
        
        private void OnGetQueueMessageStatusOperationCompleted(object arg) {
            if ((this.GetQueueMessageStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueueMessageStatusCompleted(this, new GetQueueMessageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckCredit(string Username, string password, int SmsFaCount, int SmsEnCount) {
            object[] results = this.Invoke("CheckCredit", new object[] {
                        Username,
                        password,
                        SmsFaCount,
                        SmsEnCount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCreditAsync(string Username, string password, int SmsFaCount, int SmsEnCount) {
            this.CheckCreditAsync(Username, password, SmsFaCount, SmsEnCount, null);
        }
        
        /// <remarks/>
        public void CheckCreditAsync(string Username, string password, int SmsFaCount, int SmsEnCount, object userState) {
            if ((this.CheckCreditOperationCompleted == null)) {
                this.CheckCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCreditOperationCompleted);
            }
            this.InvokeAsync("CheckCredit", new object[] {
                        Username,
                        password,
                        SmsFaCount,
                        SmsEnCount}, this.CheckCreditOperationCompleted, userState);
        }
        
        private void OnCheckCreditOperationCompleted(object arg) {
            if ((this.CheckCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCreditCompleted(this, new CheckCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTarrifOperator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetTarrifOperator(string linenumber) {
            object[] results = this.Invoke("GetTarrifOperator", new object[] {
                        linenumber});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetTarrifOperatorAsync(string linenumber) {
            this.GetTarrifOperatorAsync(linenumber, null);
        }
        
        /// <remarks/>
        public void GetTarrifOperatorAsync(string linenumber, object userState) {
            if ((this.GetTarrifOperatorOperationCompleted == null)) {
                this.GetTarrifOperatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTarrifOperatorOperationCompleted);
            }
            this.InvokeAsync("GetTarrifOperator", new object[] {
                        linenumber}, this.GetTarrifOperatorOperationCompleted, userState);
        }
        
        private void OnGetTarrifOperatorOperationCompleted(object arg) {
            if ((this.GetTarrifOperatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTarrifOperatorCompleted(this, new GetTarrifOperatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecieveSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable RecieveSMS(string Username, string password, string phNo, string startdate, string enddate) {
            object[] results = this.Invoke("RecieveSMS", new object[] {
                        Username,
                        password,
                        phNo,
                        startdate,
                        enddate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void RecieveSMSAsync(string Username, string password, string phNo, string startdate, string enddate) {
            this.RecieveSMSAsync(Username, password, phNo, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void RecieveSMSAsync(string Username, string password, string phNo, string startdate, string enddate, object userState) {
            if ((this.RecieveSMSOperationCompleted == null)) {
                this.RecieveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecieveSMSOperationCompleted);
            }
            this.InvokeAsync("RecieveSMS", new object[] {
                        Username,
                        password,
                        phNo,
                        startdate,
                        enddate}, this.RecieveSMSOperationCompleted, userState);
        }
        
        private void OnRecieveSMSOperationCompleted(object arg) {
            if ((this.RecieveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecieveSMSCompleted(this, new RecieveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnreadMessgese", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUnreadMessgese(string Username, string password, string toNumber, out string[] messages, out string[] fromNumber, out string[] recivedates) {
            object[] results = this.Invoke("GetUnreadMessgese", new object[] {
                        Username,
                        password,
                        toNumber});
            messages = ((string[])(results[1]));
            fromNumber = ((string[])(results[2]));
            recivedates = ((string[])(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnreadMessgeseAsync(string Username, string password, string toNumber) {
            this.GetUnreadMessgeseAsync(Username, password, toNumber, null);
        }
        
        /// <remarks/>
        public void GetUnreadMessgeseAsync(string Username, string password, string toNumber, object userState) {
            if ((this.GetUnreadMessgeseOperationCompleted == null)) {
                this.GetUnreadMessgeseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnreadMessgeseOperationCompleted);
            }
            this.InvokeAsync("GetUnreadMessgese", new object[] {
                        Username,
                        password,
                        toNumber}, this.GetUnreadMessgeseOperationCompleted, userState);
        }
        
        private void OnGetUnreadMessgeseOperationCompleted(object arg) {
            if ((this.GetUnreadMessgeseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnreadMessgeseCompleted(this, new GetUnreadMessgeseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnreadMessgeseWithUsername", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RecieveSms[] GetUnreadMessgeseWithUsername(string Username, string password) {
            object[] results = this.Invoke("GetUnreadMessgeseWithUsername", new object[] {
                        Username,
                        password});
            return ((RecieveSms[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUnreadMessgeseWithUsernameAsync(string Username, string password) {
            this.GetUnreadMessgeseWithUsernameAsync(Username, password, null);
        }
        
        /// <remarks/>
        public void GetUnreadMessgeseWithUsernameAsync(string Username, string password, object userState) {
            if ((this.GetUnreadMessgeseWithUsernameOperationCompleted == null)) {
                this.GetUnreadMessgeseWithUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnreadMessgeseWithUsernameOperationCompleted);
            }
            this.InvokeAsync("GetUnreadMessgeseWithUsername", new object[] {
                        Username,
                        password}, this.GetUnreadMessgeseWithUsernameOperationCompleted, userState);
        }
        
        private void OnGetUnreadMessgeseWithUsernameOperationCompleted(object arg) {
            if ((this.GetUnreadMessgeseWithUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnreadMessgeseWithUsernameCompleted(this, new GetUnreadMessgeseWithUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Test(string[] str) {
            object[] results = this.Invoke("Test", new object[] {
                        str});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestAsync(string[] str) {
            this.TestAsync(str, null);
        }
        
        /// <remarks/>
        public void TestAsync(string[] str, object userState) {
            if ((this.TestOperationCompleted == null)) {
                this.TestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestOperationCompleted);
            }
            this.InvokeAsync("Test", new object[] {
                        str}, this.TestOperationCompleted, userState);
        }
        
        private void OnTestOperationCompleted(object arg) {
            if ((this.TestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCompleted(this, new TestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CheckVersion(string username, string password) {
            object[] results = this.Invoke("CheckVersion", new object[] {
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckVersionAsync(string username, string password) {
            this.CheckVersionAsync(username, password, null);
        }
        
        /// <remarks/>
        public void CheckVersionAsync(string username, string password, object userState) {
            if ((this.CheckVersionOperationCompleted == null)) {
                this.CheckVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckVersionOperationCompleted);
            }
            this.InvokeAsync("CheckVersion", new object[] {
                        username,
                        password}, this.CheckVersionOperationCompleted, userState);
        }
        
        private void OnCheckVersionOperationCompleted(object arg) {
            if ((this.CheckVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckVersionCompleted(this, new CheckVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RecieveSms {
        
        private string rcvSmsTextField;
        
        private string rcvsmsKeyWordField;
        
        private string rcvSmsfromField;
        
        private string rcvSmsToField;
        
        private string rcvSmsInteredDateField;
        
        private string rcvSmsUDHField;
        
        private string rcvsmsCharSetField;
        
        private string rcvSmsSmsCField;
        
        private string rcvSmsStatusField;
        
        private string rcvSmsMessageIDField;
        
        private string rcvSmsRuleIDField;
        
        private string rcvSmsDeliveredTimeField;
        
        private bool rcvSmsReededField;
        
        private string usrIdField;
        
        private int recieveSMSIdField;
        
        private int operatorIdField;
        
        private System.DateTime recieveDateField;
        
        /// <remarks/>
        public string RcvSmsText {
            get {
                return this.rcvSmsTextField;
            }
            set {
                this.rcvSmsTextField = value;
            }
        }
        
        /// <remarks/>
        public string RcvsmsKeyWord {
            get {
                return this.rcvsmsKeyWordField;
            }
            set {
                this.rcvsmsKeyWordField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsfrom {
            get {
                return this.rcvSmsfromField;
            }
            set {
                this.rcvSmsfromField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsTo {
            get {
                return this.rcvSmsToField;
            }
            set {
                this.rcvSmsToField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsInteredDate {
            get {
                return this.rcvSmsInteredDateField;
            }
            set {
                this.rcvSmsInteredDateField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsUDH {
            get {
                return this.rcvSmsUDHField;
            }
            set {
                this.rcvSmsUDHField = value;
            }
        }
        
        /// <remarks/>
        public string RcvsmsCharSet {
            get {
                return this.rcvsmsCharSetField;
            }
            set {
                this.rcvsmsCharSetField = value;
            }
        }
        
        /// <remarks/>
        public string rcvSmsSmsC {
            get {
                return this.rcvSmsSmsCField;
            }
            set {
                this.rcvSmsSmsCField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsStatus {
            get {
                return this.rcvSmsStatusField;
            }
            set {
                this.rcvSmsStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsMessageID {
            get {
                return this.rcvSmsMessageIDField;
            }
            set {
                this.rcvSmsMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsRuleID {
            get {
                return this.rcvSmsRuleIDField;
            }
            set {
                this.rcvSmsRuleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RcvSmsDeliveredTime {
            get {
                return this.rcvSmsDeliveredTimeField;
            }
            set {
                this.rcvSmsDeliveredTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool RcvSmsReeded {
            get {
                return this.rcvSmsReededField;
            }
            set {
                this.rcvSmsReededField = value;
            }
        }
        
        /// <remarks/>
        public string UsrId {
            get {
                return this.usrIdField;
            }
            set {
                this.usrIdField = value;
            }
        }
        
        /// <remarks/>
        public int RecieveSMSId {
            get {
                return this.recieveSMSIdField;
            }
            set {
                this.recieveSMSIdField = value;
            }
        }
        
        /// <remarks/>
        public int OperatorId {
            get {
                return this.operatorIdField;
            }
            set {
                this.operatorIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RecieveDate {
            get {
                return this.recieveDateField;
            }
            set {
                this.recieveDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendFromUrlCompletedEventHandler(object sender, SendFromUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFromUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFromUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ArraySendQeueCompletedEventHandler(object sender, ArraySendQeueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArraySendQeueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArraySendQeueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ArraySendQeueWithIdCompletedEventHandler(object sender, ArraySendQeueWithIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArraySendQeueWithIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArraySendQeueWithIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendQeueCompletedEventHandler(object sender, SendQeueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendQeueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendQeueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendCompletedEventHandler(object sender, SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserCreditCompletedEventHandler(object sender, GetUserCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMessageStatusCompletedEventHandler(object sender, GetMessageStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetQueueMessageStatusCompletedEventHandler(object sender, GetQueueMessageStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueueMessageStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueueMessageStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckCreditCompletedEventHandler(object sender, CheckCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTarrifOperatorCompletedEventHandler(object sender, GetTarrifOperatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTarrifOperatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTarrifOperatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RecieveSMSCompletedEventHandler(object sender, RecieveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecieveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecieveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUnreadMessgeseCompletedEventHandler(object sender, GetUnreadMessgeseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnreadMessgeseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnreadMessgeseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] messages {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] fromNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] recivedates {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUnreadMessgeseWithUsernameCompletedEventHandler(object sender, GetUnreadMessgeseWithUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnreadMessgeseWithUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnreadMessgeseWithUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecieveSms[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecieveSms[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TestCompletedEventHandler(object sender, TestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckVersionCompletedEventHandler(object sender, CheckVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591