//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace SMSQueue.com.sahandsms {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetmessagestatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getstatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecivesmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getcreditOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::SMSQueue.Properties.Settings.Default.SMSQueue_com_sahandsms_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendCompletedEventHandler SendCompleted;
        
        /// <remarks/>
        public event GetmessagestatusCompletedEventHandler GetmessagestatusCompleted;
        
        /// <remarks/>
        public event getstatusesCompletedEventHandler getstatusesCompleted;
        
        /// <remarks/>
        public event RecivesmsCompletedEventHandler RecivesmsCompleted;
        
        /// <remarks/>
        public event getcreditCompletedEventHandler getcreditCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] Send(string domain, string[] messages, string[] mobiles, string[] origs, int[] encodings, string[] UDH, int[] mclass, int[] priorities, long[] checkingIds, string username) {
            object[] results = this.Invoke("Send", new object[] {
                        domain,
                        messages,
                        mobiles,
                        origs,
                        encodings,
                        UDH,
                        mclass,
                        priorities,
                        checkingIds,
                        username});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void SendAsync(string domain, string[] messages, string[] mobiles, string[] origs, int[] encodings, string[] UDH, int[] mclass, int[] priorities, long[] checkingIds, string username) {
            this.SendAsync(domain, messages, mobiles, origs, encodings, UDH, mclass, priorities, checkingIds, username, null);
        }
        
        /// <remarks/>
        public void SendAsync(string domain, string[] messages, string[] mobiles, string[] origs, int[] encodings, string[] UDH, int[] mclass, int[] priorities, long[] checkingIds, string username, object userState) {
            if ((this.SendOperationCompleted == null)) {
                this.SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOperationCompleted);
            }
            this.InvokeAsync("Send", new object[] {
                        domain,
                        messages,
                        mobiles,
                        origs,
                        encodings,
                        UDH,
                        mclass,
                        priorities,
                        checkingIds,
                        username}, this.SendOperationCompleted, userState);
        }
        
        private void OnSendOperationCompleted(object arg) {
            if ((this.SendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendCompleted(this, new SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getmessagestatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] Getmessagestatus(long[] arrmessageId) {
            object[] results = this.Invoke("Getmessagestatus", new object[] {
                        arrmessageId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetmessagestatusAsync(long[] arrmessageId) {
            this.GetmessagestatusAsync(arrmessageId, null);
        }
        
        /// <remarks/>
        public void GetmessagestatusAsync(long[] arrmessageId, object userState) {
            if ((this.GetmessagestatusOperationCompleted == null)) {
                this.GetmessagestatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetmessagestatusOperationCompleted);
            }
            this.InvokeAsync("Getmessagestatus", new object[] {
                        arrmessageId}, this.GetmessagestatusOperationCompleted, userState);
        }
        
        private void OnGetmessagestatusOperationCompleted(object arg) {
            if ((this.GetmessagestatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetmessagestatusCompleted(this, new GetmessagestatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getstatuses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] getstatuses(long[] arrmessageId) {
            object[] results = this.Invoke("getstatuses", new object[] {
                        arrmessageId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void getstatusesAsync(long[] arrmessageId) {
            this.getstatusesAsync(arrmessageId, null);
        }
        
        /// <remarks/>
        public void getstatusesAsync(long[] arrmessageId, object userState) {
            if ((this.getstatusesOperationCompleted == null)) {
                this.getstatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetstatusesOperationCompleted);
            }
            this.InvokeAsync("getstatuses", new object[] {
                        arrmessageId}, this.getstatusesOperationCompleted, userState);
        }
        
        private void OngetstatusesOperationCompleted(object arg) {
            if ((this.getstatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getstatusesCompleted(this, new getstatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Recivesms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Recivesms(string PhNo, string username, string startT, string EndT) {
            object[] results = this.Invoke("Recivesms", new object[] {
                        PhNo,
                        username,
                        startT,
                        EndT});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RecivesmsAsync(string PhNo, string username, string startT, string EndT) {
            this.RecivesmsAsync(PhNo, username, startT, EndT, null);
        }
        
        /// <remarks/>
        public void RecivesmsAsync(string PhNo, string username, string startT, string EndT, object userState) {
            if ((this.RecivesmsOperationCompleted == null)) {
                this.RecivesmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecivesmsOperationCompleted);
            }
            this.InvokeAsync("Recivesms", new object[] {
                        PhNo,
                        username,
                        startT,
                        EndT}, this.RecivesmsOperationCompleted, userState);
        }
        
        private void OnRecivesmsOperationCompleted(object arg) {
            if ((this.RecivesmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecivesmsCompleted(this, new RecivesmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getcredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long getcredit(string phno, string IUName, ref long credit, ref int racefa, ref int raceEn) {
            object[] results = this.Invoke("getcredit", new object[] {
                        phno,
                        IUName,
                        credit,
                        racefa,
                        raceEn});
            credit = ((long)(results[1]));
            racefa = ((int)(results[2]));
            raceEn = ((int)(results[3]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getcreditAsync(string phno, string IUName, long credit, int racefa, int raceEn) {
            this.getcreditAsync(phno, IUName, credit, racefa, raceEn, null);
        }
        
        /// <remarks/>
        public void getcreditAsync(string phno, string IUName, long credit, int racefa, int raceEn, object userState) {
            if ((this.getcreditOperationCompleted == null)) {
                this.getcreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetcreditOperationCompleted);
            }
            this.InvokeAsync("getcredit", new object[] {
                        phno,
                        IUName,
                        credit,
                        racefa,
                        raceEn}, this.getcreditOperationCompleted, userState);
        }
        
        private void OngetcreditOperationCompleted(object arg) {
            if ((this.getcreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getcreditCompleted(this, new getcreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendCompletedEventHandler(object sender, SendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetmessagestatusCompletedEventHandler(object sender, GetmessagestatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetmessagestatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetmessagestatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getstatusesCompletedEventHandler(object sender, getstatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getstatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getstatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RecivesmsCompletedEventHandler(object sender, RecivesmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecivesmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecivesmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void getcreditCompletedEventHandler(object sender, getcreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getcreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getcreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public long credit {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int racefa {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int raceEn {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
}

#pragma warning restore 1591